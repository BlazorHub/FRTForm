1. Document what the form should look like and how it should behave.
2. Implement basic IFormProcessor for the form.
3. Set up basic IFormSpecs implementation for the form (e.g. in FormSpecsSetup).
4. Write a test class and add the BasicTests section:
	FormSpecs_AllElements_NumberCorrect
	FormSpecs_SecondAccess_AllElementsNew
	FormSpecs_SecondAccess_ProcessorNew
	Elements_Includes_NamedElements
	FormSpecs_FormId_Correct
5. Add the required IFormElements to the IFormSpecs implementation, so that the BasicTests pass.
6. Add tests for all functionality and modify the IFormProcessor so the tests pass.
7. Add new Blazor component i.e. the form.

BasicForm - formId = basicForm
Use to demonstrate non-modal form.
Only TitleElement and ButtonElement (for Submit).
Submit should return to the caller.

DemoForm - 10 elements, formId = demoForm
Element names: DisplayOnlyButton, Close, DisplayHeader, TextInput, Select, SubmitHeader, TextArea, Title, StartTime, Duration.
Use to show all IFormElement implementations in a modal form.
Elements are listed in alphabetical order (by IFormElement type, not element name).
Initially all elements are displayed so basic styling can be checked.
	DisplayOnlyButton - visible and enabled
	Close - visible and enabled
	DisplayHeader - visible and enabled
	TextInput - visible, enabled and required
	Select - visible and enabled
	SubmitHeader - visible and enabled
	TextArea - visible and enabled
	Title - visible, value = "All elements displayed for styling initially"
	StartTime - visible and enabled
	Duration - visible and enabled
The DisplayOnlyButton switches the form to display only mode:
	N.B. the changed order of the elements
	Close - not visible
	DisplayHeader - visible and enabled
	SubmitHeader - not visible
	DisplayOnlyButton - not visible
	Title - visible, value = "Now in display only mode"
	TextInput - visible but not enabled
	Select - visible but not enabled
	TextArea - visible but not enabled
	StartTime - visible but not enabled
	Duration - visible but not enabled
When in display only mode, clicking the edit icon changes to edit mode
	Close - not visible
	DisplayHeader - not visible
	SubmitHeader - visible but not enabled (required fields missing)
	DisplayOnlyButton - not visible
	Title - visible, value = "Now in edit mode"
	TextInput - visible, enabled and required
	Select - visible and enabled
	TextArea - visible and enabled
	StartTime - visible and enabled
	Duration - visible and enabled
When in edit mode
	first non-valid user action - SubmitHeader not enabled and error message displayed
	first valid user action - SubmitHeader enabled and error message is null
	Text area reflects select after the first change